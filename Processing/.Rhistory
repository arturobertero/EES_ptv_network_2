map(list_1989, vis_miss)
#split belgium
list_1989[["29"]] = list_1989[["2"]] %>%
select(c(vote:class, t_var_ptv_party8, t_var_ptv_party11, t_var_ptv_party15, t_var_ptv_party20, t_var_ptv_party25, t_var_ptv_party32))
list_1989[["2"]] = list_1989[["2"]] %>%
select(-c(t_var_ptv_party8, t_var_ptv_party11, t_var_ptv_party15, t_var_ptv_party20, t_var_ptv_party25, t_var_ptv_party32))
#remove NAs
list_1989 = lapply(list_1989, function(df) {
df %>%
filter(complete.cases(.))
})
#list to Dataframes
list_1989 = lapply(list_1989, function(x) {as.data.frame(x)})
#split the dataframe into a list of dataframes based on unique values of t_cntry
list_1994 = split(df_1994, df_1994$t_var001)
# remove columns with only NA values
list_1994 = lapply(list_1994, function(df) {
df %>%
select(where(~ !all(is.na(.))),
-c(t_ees, t_cntry, t_var001))
})
#examine pattern of missing
map(list_1994, vis_miss)
#split belgium
list_1994[["29"]] = list_1994[["2"]] %>%
select(c(vote:class, t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party27, t_var_ptv_party28))
list_1994[["2"]] = list_1994[["2"]] %>%
select(-c(t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party26, t_var_ptv_party27, t_var_ptv_party28))
#remove NAs
list_1994 = lapply(list_1994, function(df) {
df %>%
filter(complete.cases(.))
})
#list to Dataframes
list_1994 = lapply(list_1994, function(x) {as.data.frame(x)})
#merge germanies and remove east germany
list_1994[["27"]] = rbind(list_1994[["27"]], list_1994[["28"]])
list_1994[["28"]] = NULL
#split the dataframe into a list of dataframes based on unique values of t_cntry
list_1999 = split(df_1999, df_1999$t_var001)
# remove columns with only NA values
list_1999 = lapply(list_1999, function(df) {
df %>%
select(where(~ !all(is.na(.))),
-c(t_ees, t_cntry, t_var001))
})
#examine pattern of missing
map(list_1999, vis_miss)
#split belgium
list_1999[["29"]] = list_1999[["2"]] %>%
select(c(vote:class, t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party28, t_var_ptv_party29))
list_1999[["2"]] = list_1999[["2"]] %>%
select(-c(t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party28, t_var_ptv_party29))
#remove NAs
list_1999 = lapply(list_1999, function(df) {
df %>%
filter(complete.cases(.))
})
#list to Dataframes
list_1999 = lapply(list_1999, function(x) {as.data.frame(x)})
View(list_1989)
View(list_1994)
View(list_1999)
View(d_1989_2004)
names(list_1989$2)
names(list_1989[["2"]])
#here the trend file is wrong. We have ptvs for sweden in the 2004.dta file
SWE_2004 = read_dta(here("Input", "data", "2004.dta")) %>%
clean_names()
names(SWE_2004)
#here the trend file is wrong. We have ptvs for sweden in the 2004.dta file
SWE_2004 = read_dta(here("Input", "data", "2004.dta")) %>%
clean_names() %>%
filter(country == 26) %>%
select(v111, v134, v154, v212, v217, v218, v224, v115: v128) %>%
mutate(across(v115:v128, ~na_if(.x, 99)))
map(table, SWE_2004)
map(SWE_2004, table)
#packages
library("pacman")
p_load(tidyverse, here, sjlabelled, stringr, glue, janitor, haven, stargazer,
ltm, skimr, readxl, naniar, labelled, conflicted, countrycode, visdat)
#remove scientific notation
options(scipen=999)
#conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
#EES data
#Combined data from 1989 to 2004
d_1989_2004 = read_dta(here("Input", "data", "trendEES.dta")) %>%
clean_names()
#Original data 2009
d_2009 = read_dta(here("Input", "data", "2009.dta")) %>%
clean_names()
##ptvs
#table(d_2009$q39_p1) #first
#table(d_2009$q39_p15) #last
#Original data 2014
d_2014 = read_dta(here("Input", "data", "2014.dta")) %>%
clean_names()
##ptvs
#table(d_2014$qpp8_1) #first
#table(d_2014$qpp8_8) #last
#Original data 2019
d_2019 = read_dta(here("Input", "data", "2019.dta")) %>%
clean_names()
##ptvs
#table(d_2019$q10_1) #first
#table(d_2019$q10_10) #last
#Extra operations on cumulated data 1989-2004
#select country, year, ptvs
d_1989_2004 = d_1989_2004 %>%
select(t_ees, t_cntry, t_var001,
t_var111, #vote
t_var134, #lr
t_var154, #pol int
t_var212, # party id
t_var217, #gender
t_var218, #year of birth
t_var225, # social class
t_var_ptv_party1: t_var_ptv_party58)
# t_var111
d_1989_2004 <- d_1989_2004 %>%
mutate(
t_var111 = na_if(t_var111, 7),
t_var111 = na_if(t_var111, 8),
t_var111 = na_if(t_var111, 9),
t_var111 = ifelse(t_var111 == 2, 0, t_var111)
) %>%
rename(vote = t_var111)
# t_var134
d_1989_2004 <- d_1989_2004 %>%
mutate(
t_var134 = ifelse(t_var134 > 97, NA, t_var134) # Recode values greater than 97 as NA
) %>%
rename(lr = t_var134)
# t_var154
d_1989_2004 <- d_1989_2004 %>%
mutate(
t_var154 = ifelse(t_var154 > 8, NA, t_var154), # Recode values greater than 8 as NA
t_var154 = case_when( # Invert polarity
t_var154 == 1 ~ 4,
t_var154 == 2 ~ 3,
t_var154 == 3 ~ 2,
t_var154 == 4 ~ 1,
TRUE ~ t_var154
)
) %>%
rename(pol_int = t_var154) # Rename column
# t_var212
d_1989_2004 <- d_1989_2004 %>%
mutate(
t_var212 = ifelse(t_var212 > 6, NA, t_var212), # Recode values greater than 8 as NA
t_var212 = case_when( # Invert polarity
t_var212 == 1 ~ 4,
t_var212 == 2 ~ 3,
t_var212 == 3 ~ 2,
t_var212 == 4 ~ 1,
TRUE ~ t_var212
)
) %>%
rename(part_id = t_var212) # Rename column
# t_var217
d_1989_2004 <- d_1989_2004 %>%
mutate(
t_var217 = ifelse(t_var217 > 2, NA, t_var217)) %>%
rename(sex = t_var217)
# t_var218
d_1989_2004 <- d_1989_2004 %>%
rename(yb = t_var218)
# t_var225
d_1989_2004 <- d_1989_2004 %>%
mutate(
t_var225 = ifelse(t_var225 > 5, NA, t_var225)) %>%
rename(class = t_var225)
# ptvs
d_1989_2004 = d_1989_2004 %>%
mutate(across(t_var_ptv_party1:t_var_ptv_party58, ~case_when(
. == 99 ~ NA_real_,
. == 98 ~ NA_real_,
. == 97 ~ NA_real_,
. == 12 ~ NA_real_,
. == -1 ~ NA_real_,
TRUE ~ .
)))
#wave dfs for d_1989_2004
list_of_dfs = split(d_1989_2004, d_1989_2004$t_ees)
for (year in names(list_of_dfs)) {
var_name = paste("df", year, sep = "_")
assign(var_name, list_of_dfs[[year]], envir = .GlobalEnv)
}
#split the dataframe into a list of dataframes based on unique values of t_cntry
list_1989 = split(df_1989, df_1989$t_var001)
# remove columns with only NA values
list_1989 = lapply(list_1989, function(df) {
df %>%
select(where(~ !all(is.na(.))),
-c(t_ees, t_cntry, t_var001))
})
#examine pattern of missing
map(list_1989, vis_miss)
#split belgium
list_1989[["29"]] = list_1989[["2"]] %>%
select(c(vote:class, t_var_ptv_party8, t_var_ptv_party11, t_var_ptv_party15, t_var_ptv_party20, t_var_ptv_party25, t_var_ptv_party32))
list_1989[["2"]] = list_1989[["2"]] %>%
select(-c(t_var_ptv_party8, t_var_ptv_party11, t_var_ptv_party15, t_var_ptv_party20, t_var_ptv_party25, t_var_ptv_party32))
#remove NAs
list_1989 = lapply(list_1989, function(df) {
df %>%
filter(complete.cases(.))
})
#list to Dataframes
list_1989 = lapply(list_1989, function(x) {as.data.frame(x)})
#split the dataframe into a list of dataframes based on unique values of t_cntry
list_1994 = split(df_1994, df_1994$t_var001)
# remove columns with only NA values
list_1994 = lapply(list_1994, function(df) {
df %>%
select(where(~ !all(is.na(.))),
-c(t_ees, t_cntry, t_var001))
})
#examine pattern of missing
map(list_1994, vis_miss)
#split belgium
list_1994[["29"]] = list_1994[["2"]] %>%
select(c(vote:class, t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party27, t_var_ptv_party28))
list_1994[["2"]] = list_1994[["2"]] %>%
select(-c(t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party26, t_var_ptv_party27, t_var_ptv_party28))
#remove NAs
list_1994 = lapply(list_1994, function(df) {
df %>%
filter(complete.cases(.))
})
#list to Dataframes
list_1994 = lapply(list_1994, function(x) {as.data.frame(x)})
#merge germanies and remove east germany
list_1994[["27"]] = rbind(list_1994[["27"]], list_1994[["28"]])
list_1994[["28"]] = NULL
#split the dataframe into a list of dataframes based on unique values of t_cntry
list_1999 = split(df_1999, df_1999$t_var001)
# remove columns with only NA values
list_1999 = lapply(list_1999, function(df) {
df %>%
select(where(~ !all(is.na(.))),
-c(t_ees, t_cntry, t_var001))
})
#examine pattern of missing
map(list_1999, vis_miss)
#split belgium
list_1999[["29"]] = list_1999[["2"]] %>%
select(c(vote:class, t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party28, t_var_ptv_party29))
list_1999[["2"]] = list_1999[["2"]] %>%
select(-c(t_var_ptv_party9, t_var_ptv_party14, t_var_ptv_party19, t_var_ptv_party24, t_var_ptv_party28, t_var_ptv_party29))
#remove NAs
list_1999 = lapply(list_1999, function(df) {
df %>%
filter(complete.cases(.))
})
#list to Dataframes
list_1999 = lapply(list_1999, function(x) {as.data.frame(x)})
#here the trend file is wrong. We have ptvs for sweden in the 2004.dta file
SWE_2004 = read_dta(here("Input", "data", "2004.dta")) %>%
clean_names() %>%
filter(country == 26) %>%
select(v111, v134, v154, v212, v217, v218, v224, v115: v128) %>%
mutate(across(v115:v128, ~na_if(.x, 99)))
# t_var111
SWE_2004 <- SWE_2004 %>%
mutate(
t_var111 = na_if(t_var111, 7),
t_var111 = na_if(t_var111, 8),
t_var111 = na_if(t_var111, 9),
t_var111 = ifelse(t_var111 == 2, 0, t_var111)
) %>%
rename(vote = t_var111)
#here the trend file is wrong. We have ptvs for sweden in the 2004.dta file
SWE_2004 = read_dta(here("Input", "data", "2004.dta")) %>%
clean_names() %>%
filter(country == 26) %>%
select(v111, v134, v154, v212, v217, v218, v224, v115: v128) %>%
mutate(across(v115:v128, ~na_if(.x, 99)))
# t_var111
SWE_2004 <- SWE_2004 %>%
mutate(
v111 = na_if(t_var111, 7),
v111 = na_if(t_var111, 8),
v111 = na_if(t_var111, 9),
v111 = ifelse(t_var111 == 2, 0, t_var111)
) %>%
rename(vote = t_var111)
#here the trend file is wrong. We have ptvs for sweden in the 2004.dta file
SWE_2004 = read_dta(here("Input", "data", "2004.dta")) %>%
clean_names() %>%
filter(country == 26) %>%
select(v111, v134, v154, v212, v217, v218, v224, v115: v128) %>%
mutate(across(v115:v128, ~na_if(.x, 99)))
# t_var111
SWE_2004 <- SWE_2004 %>%
mutate(
v111 = na_if(v111, 7),
v111 = na_if(v111, 8),
v111 = na_if(v111, 9),
v111 = ifelse(v111 == 2, 0, v111)
) %>%
rename(vote = v111)
# t_var134
SWE_2004 <- SWE_2004 %>%
mutate(
v134 = ifelse(v134 > 97, NA, v134) # Recode values greater than 97 as NA
) %>%
rename(lr = v134)
# t_var154
SWE_2004 <- SWE_2004 %>%
mutate(
v154 = ifelse(v154 > 8, NA, v154), # Recode values greater than 8 as NA
v154 = case_when( # Invert polarity
v154 == 1 ~ 4,
v154 == 2 ~ 3,
v154 == 3 ~ 2,
v154 == 4 ~ 1,
TRUE ~ v154
)
) %>%
rename(pol_int = v154) # Rename column
# t_var212
SWE_2004 <- SWE_2004 %>%
mutate(
v212 = ifelse(v212 > 6, NA, v212), # Recode values greater than 8 as NA
v212 = case_when( # Invert polarity
v212 == 1 ~ 4,
v212 == 2 ~ 3,
v212 == 3 ~ 2,
v212 == 4 ~ 1,
TRUE ~ v212
)
) %>%
rename(part_id = v212) # Rename column
# t_var217
SWE_2004 <- SWE_2004 %>%
mutate(
v217 = ifelse(v217 > 2, NA, v217)) %>%
rename(sex = v217)
# t_var218
SWE_2004 <- SWE_2004 %>%
rename(yb = v218)
# t_var224
SWE_2004 <- SWE_2004 %>%
mutate(
t_var225 = ifelse(v225 > 5, NA, v225)) %>%
rename(class = v224)
#here the trend file is wrong. We have ptvs for sweden in the 2004.dta file
SWE_2004 = read_dta(here("Input", "data", "2004.dta")) %>%
clean_names() %>%
filter(country == 26) %>%
select(v111, v134, v154, v212, v217, v218, v224, v115: v128) %>%
mutate(across(v115:v128, ~na_if(.x, 99)))
# t_var111
SWE_2004 <- SWE_2004 %>%
mutate(
v111 = na_if(v111, 7),
v111 = na_if(v111, 8),
v111 = na_if(v111, 9),
v111 = ifelse(v111 == 2, 0, v111)
) %>%
rename(vote = v111)
# t_var134
SWE_2004 <- SWE_2004 %>%
mutate(
v134 = ifelse(v134 > 97, NA, v134) # Recode values greater than 97 as NA
) %>%
rename(lr = v134)
# t_var154
SWE_2004 <- SWE_2004 %>%
mutate(
v154 = ifelse(v154 > 8, NA, v154), # Recode values greater than 8 as NA
v154 = case_when( # Invert polarity
v154 == 1 ~ 4,
v154 == 2 ~ 3,
v154 == 3 ~ 2,
v154 == 4 ~ 1,
TRUE ~ v154
)
) %>%
rename(pol_int = v154) # Rename column
# t_var212
SWE_2004 <- SWE_2004 %>%
mutate(
v212 = ifelse(v212 > 6, NA, v212), # Recode values greater than 8 as NA
v212 = case_when( # Invert polarity
v212 == 1 ~ 4,
v212 == 2 ~ 3,
v212 == 3 ~ 2,
v212 == 4 ~ 1,
TRUE ~ v212
)
) %>%
rename(part_id = v212) # Rename column
# t_var217
SWE_2004 <- SWE_2004 %>%
mutate(
v217 = ifelse(v217 > 2, NA, v217)) %>%
rename(sex = v217)
# t_var218
SWE_2004 <- SWE_2004 %>%
rename(yb = v218)
# t_var224
SWE_2004 <- SWE_2004 %>%
mutate(
v225 = ifelse(v225 > 5, NA, v225)) %>%
rename(class = v224)
#here the trend file is wrong. We have ptvs for sweden in the 2004.dta file
SWE_2004 = read_dta(here("Input", "data", "2004.dta")) %>%
clean_names() %>%
filter(country == 26) %>%
select(v111, v134, v154, v212, v217, v218, v224, v115: v128) %>%
mutate(across(v115:v128, ~na_if(.x, 99)))
# t_var111
SWE_2004 <- SWE_2004 %>%
mutate(
v111 = na_if(v111, 7),
v111 = na_if(v111, 8),
v111 = na_if(v111, 9),
v111 = ifelse(v111 == 2, 0, v111)
) %>%
rename(vote = v111)
# t_var134
SWE_2004 <- SWE_2004 %>%
mutate(
v134 = ifelse(v134 > 97, NA, v134) # Recode values greater than 97 as NA
) %>%
rename(lr = v134)
# t_var154
SWE_2004 <- SWE_2004 %>%
mutate(
v154 = ifelse(v154 > 8, NA, v154), # Recode values greater than 8 as NA
v154 = case_when( # Invert polarity
v154 == 1 ~ 4,
v154 == 2 ~ 3,
v154 == 3 ~ 2,
v154 == 4 ~ 1,
TRUE ~ v154
)
) %>%
rename(pol_int = v154) # Rename column
# t_var212
SWE_2004 <- SWE_2004 %>%
mutate(
v212 = ifelse(v212 > 6, NA, v212), # Recode values greater than 8 as NA
v212 = case_when( # Invert polarity
v212 == 1 ~ 4,
v212 == 2 ~ 3,
v212 == 3 ~ 2,
v212 == 4 ~ 1,
TRUE ~ v212
)
) %>%
rename(part_id = v212) # Rename column
# t_var217
SWE_2004 <- SWE_2004 %>%
mutate(
v217 = ifelse(v217 > 2, NA, v217)) %>%
rename(sex = v217)
# t_var218
SWE_2004 <- SWE_2004 %>%
rename(yb = v218)
# t_var224
SWE_2004 <- SWE_2004 %>%
mutate(
v224 = ifelse(v224 > 5, NA, v224)) %>%
rename(class = v224)
# remove columns with only NA values, than NA.omit
SWE_2004 = SWE_2004 %>%
select(where(~ !all(is.na(.)))) %>%
na.omit()
View(SWE_2004)
names(SWE_2004)
View(list_1989)
# rename ptv cols
SWE_2004 <- SWE_2004 %>%
rename_with(~ paste0("t_var_ptv_party", seq_along(.)), .cols = v115:v122)
# Now back again on the trend file with the same procedure as before
#split the dataframe into a list of dataframes based on unique values of t_cntry
list_2004 = split(df_2004, df_2004$t_var001)
# remove columns with only NA values
list_2004 = lapply(list_2004, function(df) {
df %>%
select(where(~ !all(is.na(.))),
-c(t_ees, t_cntry, t_var001))
})
# remove counrties without PTVs data
list_2004[["2"]] = NULL
list_2004[["16"]] = NULL
list_2004[["17"]] = NULL
#assign data of SWE
list_2004[["26"]] = SWE_2004
#examine pattern of missing
map(list_2004, vis_miss)
#exclude party19 and party20 from britain
list_2004[["3"]][["t_var_ptv_party19"]] = NULL
list_2004[["3"]][["t_var_ptv_party20"]] = NULL
#remove NAs
list_2004 = lapply(list_2004, function(df) {
df %>%
filter(complete.cases(.))
})
#list to Dataframes
list_2004 = lapply(list_2004, function(x) {as.data.frame(x)})
View(df_2004)
View(list_2004)
View(d_2009)
View(list_1989)
View(d_2014)
